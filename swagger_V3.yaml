swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

      
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile successfully retrieved
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile successfully retrieved
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

### ACCOUNT MODULE ###
  /account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Account API
      description: Route to get current month's transactions
      parameters:
        - name: accountId
          in: path
          description: ID of the account to fetch
          required: true
          type: integer
      responses:
        '200':
          description: Transactions successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Account API
      description: Route to add a new transaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account to fetch
          required: true
          type: integer
        - in: body
          name: body
          description: Transaction informations
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction successfully added
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

### TRANSACTIONS MODULE ###  
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: Route to get a transaction by its id
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to fetch
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Transaction successfully retrieved
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: Route to modify the additionnal informations of a transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to fetch
          required: true
          type: integer
        - in: body
          name: body
          description: New transaction additionnal informations
          required: true
          schema:
            type: object
            properties:
              categoryId:
                type: integer
              note:
                type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction additionnal informations successfully modified
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

### CATEGORIE MODULE ###
  /categories:
    get:
      tags:
       - Categories Module
      summary: Categories API
      description: Route to get all transactions' categories
      security:
        - Bearer: []
      produces:
        - application/json
      responses:
        '200':
          description: Categories successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionCategory'
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    post:
      tags:
       - Categories Module
      summary: Categories API
      description: Route to add a new category
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Category to add
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      responses:
        '200':
          description: Category successfully added
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  
  /categories/{categoryId}:
    put:
      tags:
       - Categories Module
      summary: Categories API
      description: Route to modify an existing category
      security:
        - Bearer: []
      parameters:
        - name: categoryId
          in: path
          description: ID of the transaction category to modify
          required: true
          type: integer
        - in: body
          name: body
          description: Modifications to apply to the cateogry
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: Category successfully modified
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      tags:
       - Categories Module
      summary: Categories API
      description: Route to delete an existing category 
      security:
        - Bearer: []
      parameters:
        - name: categoryId
          in: path
          description: ID of the transaction category to delete
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Category successfully deleted
        '400':
          description: Invalid Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header


definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      date:
        type: string
      accountId:
        type: integer
      transactionType:
        type: string
        enum:
          - creditCard
          - electonic
      categoryId:
        type: integer
      note:
        type: string
      
  TransactionCategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string